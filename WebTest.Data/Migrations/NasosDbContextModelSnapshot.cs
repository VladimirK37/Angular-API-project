// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebTest.Data.Context;

#nullable disable

namespace WebTest.Data.Migrations
{
    [DbContext(typeof(NasosDbContext))]
    partial class NasosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebTest.Data.Entityes.MaterialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("WebTest.Data.Entityes.MotorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Current")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Motor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NominalSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Motors");
                });

            modelBuilder.Entity("WebTest.Data.Entityes.NasosEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ImpellerMaterialId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MaterialHullId")
                        .HasColumnType("uuid");

                    b.Property<double>("MaxPressure")
                        .HasColumnType("double precision");

                    b.Property<Guid>("MotorEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<double>("Temperature")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ImpellerMaterialId");

                    b.HasIndex("MaterialHullId");

                    b.HasIndex("MotorEntityId");

                    b.ToTable("Nasoses");
                });

            modelBuilder.Entity("WebTest.Data.Entityes.NasosEntity", b =>
                {
                    b.HasOne("WebTest.Data.Entityes.MaterialEntity", "ImpellerMaterial")
                        .WithMany("ImpellerMaterialNasoses")
                        .HasForeignKey("ImpellerMaterialId");

                    b.HasOne("WebTest.Data.Entityes.MaterialEntity", "MaterialHull")
                        .WithMany("BodyMaterialNasoses")
                        .HasForeignKey("MaterialHullId");

                    b.HasOne("WebTest.Data.Entityes.MotorEntity", "MotorEntity")
                        .WithMany("Nasoses")
                        .HasForeignKey("MotorEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImpellerMaterial");

                    b.Navigation("MaterialHull");

                    b.Navigation("MotorEntity");
                });

            modelBuilder.Entity("WebTest.Data.Entityes.MaterialEntity", b =>
                {
                    b.Navigation("BodyMaterialNasoses");

                    b.Navigation("ImpellerMaterialNasoses");
                });

            modelBuilder.Entity("WebTest.Data.Entityes.MotorEntity", b =>
                {
                    b.Navigation("Nasoses");
                });
#pragma warning restore 612, 618
        }
    }
}
